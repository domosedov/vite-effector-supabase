/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown
      }
    }
  }
  '/todos': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.todos.id']
          created_at?: parameters['rowFilter.todos.created_at']
          user_id?: parameters['rowFilter.todos.user_id']
          title?: parameters['rowFilter.todos.title']
          description?: parameters['rowFilter.todos.description']
          is_completed?: parameters['rowFilter.todos.is_completed']
          completed_at?: parameters['rowFilter.todos.completed_at']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['todos'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** todos */
          todos?: definitions['todos']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.todos.id']
          created_at?: parameters['rowFilter.todos.created_at']
          user_id?: parameters['rowFilter.todos.user_id']
          title?: parameters['rowFilter.todos.title']
          description?: parameters['rowFilter.todos.description']
          is_completed?: parameters['rowFilter.todos.is_completed']
          completed_at?: parameters['rowFilter.todos.completed_at']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.todos.id']
          created_at?: parameters['rowFilter.todos.created_at']
          user_id?: parameters['rowFilter.todos.user_id']
          title?: parameters['rowFilter.todos.title']
          description?: parameters['rowFilter.todos.description']
          is_completed?: parameters['rowFilter.todos.is_completed']
          completed_at?: parameters['rowFilter.todos.completed_at']
        }
        body: {
          /** todos */
          todos?: definitions['todos']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
}

export interface definitions {
  todos: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string
    /** Format: uuid */
    user_id: string
    /** Format: text */
    title: string
    /** Format: text */
    description?: string
    /** Format: boolean */
    is_completed: boolean
    /** Format: timestamp with time zone */
    completed_at?: string
  }
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object'
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none'
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none'
  /** @description Filtering Columns */
  select: string
  /** @description On Conflict */
  on_conflict: string
  /** @description Ordering */
  order: string
  /** @description Limiting and Pagination */
  range: string
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string
  /** @description Limiting and Pagination */
  offset: string
  /** @description Limiting and Pagination */
  limit: string
  /** @description todos */
  'body.todos': definitions['todos']
  /** Format: uuid */
  'rowFilter.todos.id': string
  /** Format: timestamp with time zone */
  'rowFilter.todos.created_at': string
  /** Format: uuid */
  'rowFilter.todos.user_id': string
  /** Format: text */
  'rowFilter.todos.title': string
  /** Format: text */
  'rowFilter.todos.description': string
  /** Format: boolean */
  'rowFilter.todos.is_completed': string
  /** Format: timestamp with time zone */
  'rowFilter.todos.completed_at': string
}

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface operations {}

// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface external {}
